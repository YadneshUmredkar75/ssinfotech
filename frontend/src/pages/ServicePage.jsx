import React, { useMemo, useState, useEffect, useRef } from "react";
import { Link } from "react-router-dom";
import { motion, useScroll, useTransform } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "../components/UI/Card";
import { Badge } from "../components/UI/Badge";
import { Button } from "../components/UI/Button";
import { Input } from "../components/UI/Input";
import { Textarea } from "../components/UI/Textarea";
import { Label } from "../components/UI/Lable "; // Fixed typo in import path
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../components/UI/Select";
import { toast } from "../Hooks/use-toast";
import {
  Code,
  Cpu,
  Smartphone,
  Megaphone,
  BookOpen,
  Users,
  Briefcase,
  Layers,
  CheckCircle,
  Stars,
  Sparkles,
  Globe,
  Mail,
  Share2,
  Network,
  Search,
  ShoppingCart,
  MessageCircle,
  BarChart3,
  Smartphone as SmartphoneIcon, // Fixed duplicate import
  Cloud,
  Phone, // Added missing import
  MapPin, // Added missing import
  Clock, // Added missing import
  Send, // Added missing import
  ArrowRight // Added missing import
} from "lucide-react";

export default function ServicePage() {
  const sectionRef = useRef(null);
  const { scrollYProgress } = useScroll({
    target: sectionRef,
    offset: ["start end", "end start"]
  });

  // Scroll-based animations
  const y = useTransform(scrollYProgress, [0, 1], [100, -100]);
  const opacity = useTransform(scrollYProgress, [0, 0.3, 0.7, 1], [0, 1, 1, 0]);
  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [0.8, 1, 0.9]);

  // Floating animation variants
  const floatingAnimation = {
    animate: {
      y: [0, -20, 0],
      transition: {
        duration: 6,
        repeat: Infinity,
        ease: "easeInOut"
      }
    }
  };

  const pulseAnimation = {
    animate: {
      scale: [1, 1.05, 1],
      opacity: [0.3, 0.6, 0.3],
      transition: {
        duration: 4,
        repeat: Infinity,
        ease: "easeInOut"
      }
    }
  };

  // Animation Variants
  const fadeUp = {
    hidden: { opacity: 0, y: 60 },
    visible: (i) => ({
      opacity: 1,
      y: 0,
      transition: {
        delay: i * 0.15,
        duration: 0.8,
        ease: "easeOut",
        when: "beforeChildren"
      },
    }),
  };

  const container = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        when: "beforeChildren"
      },
    },
  };

  const item = {
    hidden: { opacity: 0, y: 50 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { duration: 0.7, ease: "easeOut" },
    },
  };

  const services = [
    {
      id: "website-development",
      title: "Website Development",
      icon: Globe,
      description: "Comprehensive website development services from static sites to complex dynamic web applications.",
      highlights: ["Static & Dynamic Sites", "E-commerce", "WordPress", "Custom Solutions"],
      details: [
        {
          title: "Static Website Development",
          description: "A static website (sometimes called a flat page or a stationary page) is delivered to users exactly as stored, in contrast to dynamic web pages which are generated by a web application. Static websites are the most fundamental form of website."
        },
        {
          title: "Dynamic Website Development",
          description: "Dynamic web pages are capable of producing different content for specific visitors from the same source code. The website can show unique content based on operating system, browser, device type, or referral source."
        },
        {
          title: "E-commerce Website",
          description: "E-commerce websites are online portals that facilitate online transactions of goods and services through the transfer of information and funds over the Internet. Everything needed for a transaction can be executed online through a single website."
        },
        {
          title: "WordPress Website",
          description: "WordPress is a free, open-source website creation platform and content management system (CMS) written in PHP that uses a MySQL database. It's the easiest and most powerful blogging and website builder available today."
        },
        {
          title: "CRM Website Development",
          description: "CRM stands for Customer Relationship Management. It's software that allows for automated collection and processing of various data that your customers submit on your website, going beyond basic customer data collection."
        },
        {
          title: "Customized Website Development",
          description: "Custom web development is tailor-made for your brand, product or company, specially created for your target audience giving you an extra edge from your rivals. Features such as layouts, fonts, and colors are developed to enhance your online brand."
        }
      ]
    },
    {
      id: "mobile-app",
      title: "Mobile App Development",
      icon: SmartphoneIcon,
      description: "Native and cross-platform mobile applications for iOS and Android with modern development practices.",
      highlights: ["Android Apps", "Custom Solutions", "Cross-platform", "Performance"],
      details: [
        {
          title: "Android Application",
          description: "Android Apps are products intended to run on Android devices. Android applications can be written in Kotlin, Java, and C++ and run inside Virtual Machine, providing native Android experience."
        },
        {
          title: "Customized Application Development",
          description: "Custom software development involves designing software applications for specific users or groups within an organization. Such software is designed to specifically address users' needs better than traditional off-the-shelf software."
        }
      ]
    },
    {
      id: "software-development",
      title: "Software Development",
      icon: Cpu,
      description: "Bespoke software engineering for web, mobile and backend systems with modern engineering practices.",
      highlights: ["Admin Software", "ERP Systems", "GST Billing", "Custom Solutions"],
      details: [
        {
          title: "Admin Software",
          description: "Admin software performs varied tasks including monitoring, maintaining, and testing system performance, ensuring availability of computer networks, and troubleshooting system failures. Can be implemented in student management systems, transportation, and various other domains."
        },
        {
          title: "ERP (Enterprise Resource Planning)",
          description: "Enterprise resource planning delivers an integrated set of business applications. ERP solutions provide common processes and data needs, covering wide and deep operational end-to-end measures such as those found in finance, HR, distribution, manufacturing, and supply chain."
        },
        {
          title: "GST Billing Software",
          description: "As a GST registered dealer, you are required to provide GST invoices to your clients. GST billing software helps create compliant invoices and manage billing processes efficiently for businesses of all sizes."
        },
        {
          title: "Customized Software",
          description: "Customized software (also known as bespoke software or tailor-made software) is specially developed for specific organizations or users, addressing unique business requirements that off-the-shelf solutions cannot meet."
        }
      ]
    },
    {
      id: "digital-marketing",
      title: "Digital Marketing",
      icon: Megaphone,
      description: "Data driven marketing: SEO, paid ads, content and growth experiments to increase conversions and users.",
      highlights: ["SEO", "Social Media", "Bulk SMS", "Graphics Design"],
      details: [
        {
          title: "Search Engine Optimization (SEO)",
          description: "SEO involves making your website search engine friendly through onsite optimization (adjusting website elements) and offsite SEO (actions taken outside your website to impact rankings)."
        },
        {
          title: "Social Media Marketing",
          description: "Social media marketing includes activities like posting text and image updates, videos, and other content that drives audience engagement, as well as paid social media advertising to build your brand, increase sales, and drive website traffic."
        },
        {
          title: "Bulk SMS Service",
          description: "Bulk SMS involves the dissemination of large numbers of SMS messages for delivery to mobile phones. Used by media companies, enterprises, banks, and consumer brands for marketing, notifications, and fraud control."
        },
        {
          title: "Graphics Design",
          description: "Logo design and visual identity creation including typography, color palettes, and image libraries that represent a brand's personality. Specialized designers collaborate with stakeholders to create perfect visual brand marks."
        }
      ]
    },
    {
      id: "integration-services",
      title: "Integration Services",
      icon: Network,
      description: "Seamless integration of payment gateways, SMS services, and other third-party APIs into your systems.",
      highlights: ["Payment Gateway", "SMS Gateway", "Bulk SMS", "API Integration"],
      details: [
        {
          title: "Payment Gateway Integration",
          description: "Integrated payment gateway allows you to keep users at your website during purchases. Non-hosted payment gateway providers allow for integration via APIs, giving you full control over transactions at your website."
        },
        {
          title: "Multiple Provider Integration",
          description: "Multiple service provider relationships involve environments where two or more providers collaborate to deliver end-to-end solutions. Each provider brings their core competence and focus areas to the partnership."
        },
        {
          title: "SMS Gateway Integration",
          description: "Bulk SMS API platforms provide links to all kinds of software solutions and are the quickest way of sending transactional SMS to clients. SMS gateways transform messages into email or HTTP requests and vice versa."
        }
      ]
    },
    {
      id: "cloud-services",
      title: "Cloud Services",
      icon: Cloud,
      description: "Scalable cloud solutions for storage, computing, and deployment with top-tier security and reliability.",
      highlights: ["Cloud Storage", "Compute Services", "Backup Solutions", "Scalability"],
      details: [
        {
          title: "Cloud Storage",
          description: "Secure and scalable storage solutions for data backup, archiving, and retrieval."
        },
        {
          title: "Compute Services",
          description: "Flexible computing resources for running applications and services in the cloud."
        }
      ]
    }
  ];

  const products = [
    {
  id: "ecom",
  name: "BookMyFarm",
  description:
    "A Java Full Stack client project for managing scalable storefronts with cart, checkout, and admin dashboards. Built using React.js (TypeScript), Tailwind CSS, and MySQL on the backend with Java.",
  tech: ["React (TypeScript)", "Tailwind CSS", "Java", "MySQL"],
  image: "/placeholder.svg",
},
{
  id: "edtech",
  name: "Online Kharida",
  description:
    "An ongoing MERN-based e-commerce platform designed for seamless online shopping experiences. Currently in development and expected to be completed within 5–6 months.",
  tech: ["MongoDB", "Express.js", "React.js", "Node.js"],
  image: "/placeholder.svg",
}

    // {
    //   id: "recruit",
    //   name: "Recruitment Portal",
    //   description: "End-to-end recruitment product with job listings, applicant tracking and campus drive integration.",
    //   tech: ["React", "GraphQL", "Postgres"],
    //   image: "/placeholder.svg",
    // },
    // {
    //   id: "analytics",
    //   name: "Analytics Dashboard",
    //   description: "Operational dashboards with real-time metrics, alerts and role based access.",
    //   tech: ["D3", "Node.js", "TimescaleDB"],
    //   image: "/placeholder.svg",
    // },
  ];

  const categories = [
    { id: "all", label: "All" },
    { id: "development", label: "Development" },
    { id: "marketing", label: "Marketing" },
  ];

  const budgetRanges = [
    { value: "5k-20k", label: "₹5,000 - ₹20,000" },
    { value: "20k-50k", label: "₹20,000 - ₹50,000" },
    { value: "50k-1L", label: "₹50,000 - ₹1 Lakh" },
    { value: "1L-5L", label: "₹1 Lakh - ₹5 Lakh" },
    { value: "5L+", label: "₹5 Lakh +" },
  ];

  const timelineOptions = [
    { value: "2-weeks", label: "2 Weeks" },
    { value: "1-month", label: "1 Month" },
    { value: "2-3-months", label: "2-3 Months" },
    { value: "3-6-months", label: "3-6 Months" },
    { value: "6+months", label: "6+ Months" },
  ];

  const [query, setQuery] = useState("");
  const [activeCategory, setActiveCategory] = useState("all");
  const [form, setForm] = useState({ 
    name: "", 
    email: "", 
    message: "", 
    service: "", 
    phone: "", 
    company: "", 
    budget: "", 
    timeline: "" 
  });
  const [submitting, setSubmitting] = useState(false);
  const [expandedService, setExpandedService] = useState(null);

  const filtered = useMemo(() => {
    const q = query.trim().toLowerCase();
    return services.filter((s) => {
      if (activeCategory !== "all") {
        if (activeCategory === "development" && !["website-development", "software-development", "mobile-app", "integration-services", "cloud-services"].includes(s.id)) return false;
        if (activeCategory === "marketing" && s.id !== "digital-marketing") return false;
      }
      if (!q) return true;
      return (s.title + " " + s.description + " " + s.highlights.join(" ")).toLowerCase().includes(q);
    });
  }, [query, activeCategory]);

  const canSubmit = form.name.trim() && form.email.includes("@") && form.service && form.phone.trim();

  function handleFormChange(e) {
    const { name, value } = e.target;
    setForm((s) => ({ ...s, [name]: value }));
  }

  function handleSelect(field, value) {
    setForm((s) => ({ ...s, [field]: value }));
  }

  async function handleSubmit(e) {
    e.preventDefault();
    if (!canSubmit) return;
    setSubmitting(true);
    try {
      await new Promise((r) => setTimeout(r, 700));
      toast({ 
        title: "Request sent", 
        description: `We'll contact you at ${form.email} regarding ${form.service}.` 
      });
      setForm({ 
        name: "", 
        email: "", 
        message: "", 
        service: "", 
        phone: "", 
        company: "", 
        budget: "", 
        timeline: "" 
      });
    } finally {
      setSubmitting(false);
    }
  }

  const toggleServiceDetails = (serviceId) => {
    setExpandedService(expandedService === serviceId ? null : serviceId);
  };

  return (
    <div className="space-y-0" ref={sectionRef}>
      {/* Hero Section */}
      <section className="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-purple-900 via-purple-800 to-purple-600 text-white">
        {/* Animated Background Elements */}
        <motion.div
          className="absolute top-20 left-10 w-20 h-20 bg-purple-400/20 rounded-full blur-xl"
          animate={{
            y: [0, 30, 0],
            x: [0, 15, 0],
            scale: [1, 1.2, 1]
          }}
          transition={{ repeat: Infinity, duration: 8, ease: "easeInOut" }}
        />
        <motion.div
          className="absolute bottom-32 right-20 w-32 h-32 bg-pink-400/30 rounded-full blur-2xl"
          animate={{
            y: [0, -40, 0],
            x: [0, -20, 0],
            scale: [1, 1.3, 1]
          }}
          transition={{ repeat: Infinity, duration: 10, ease: "easeInOut" }}
        />
        <motion.div
          className="absolute top-1/3 right-1/4 w-16 h-16 bg-indigo-400/25 rounded-full blur-lg"
          animate={{
            y: [0, 25, 0],
            x: [0, -15, 0],
            rotate: [0, 180, 360]
          }}
          transition={{ repeat: Infinity, duration: 12, ease: "easeInOut" }}
        />
        
        {/* Floating Stars */}
        <motion.div
          className="absolute top-1/4 left-1/5"
          variants={floatingAnimation}
          animate="animate"
        >
          <Stars className="h-6 w-6 text-purple-300" />
        </motion.div>
        <motion.div
          className="absolute bottom-1/3 right-1/3"
          variants={floatingAnimation}
          animate="animate"
          style={{ animationDelay: '2s' }}
        >
          <Sparkles className="h-4 w-4 text-pink-300" />
        </motion.div>
        <motion.div
          className="absolute top-2/3 left-1/3"
          variants={floatingAnimation}
          animate="animate"
          style={{ animationDelay: '4s' }}
        >
          <Stars className="h-5 w-5 text-indigo-300" />
        </motion.div>
        
        {/* Main Content */}
        <div className="relative z-10 text-center max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="space-y-8"
          >
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.6, delay: 0.2 }}
            >
              <Badge className="bg-purple-400/20 backdrop-blur-sm text-purple-100 px-6 py-2 text-lg border border-purple-300/30 shadow-lg shadow-purple-500/20 font-semibold">
                <Sparkles className="w-4 h-4 mr-2" />
                Our Services
              </Badge>
            </motion.div>
            <motion.div
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="space-y-6"
            >
              <h1 className="text-5xl md:text-7xl lg:text-8xl font-bold leading-tight">
                Empower Your{" "}
                <motion.span
                  className="bg-gradient-to-r from-purple-200 to-pink-200 bg-clip-text text-transparent inline-block"
                  animate={{
                    backgroundPosition: ['0%', '100%', '0%'],
                  }}
                  transition={{
                    duration: 4,
                    repeat: Infinity,
                    ease: "easeInOut"
                  }}
                  style={{
                    backgroundSize: '200% 200%'
                  }}
                >
                  Future
                </motion.span>
              </h1>
            </motion.div>
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.6 }}
              className="max-w-3xl mx-auto"
            >
              <p className="text-xl md:text-2xl lg:text-3xl text-purple-100 leading-relaxed">
                From cutting-edge product engineering to transformative marketing and cloud solutions,{" "}
                <motion.span
                  className="font-semibold text-white"
                  animate={{ opacity: [0.7, 1, 0.7] }}
                  transition={{ duration: 2, repeat: Infinity }}
                >
                  we drive success
                </motion.span>{" "}
                for students and businesses alike.
              </p>
            </motion.div>
          </motion.div>
        </div>
        
        {/* Scroll Indicator */}
        <motion.div
          className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
          animate={{ y: [0, 10, 0] }}
          transition={{ duration: 2, repeat: Infinity }}
        >
          <div className="w-6 h-10 border-2 border-white/50 rounded-full flex justify-center">
            <motion.div
              className="w-1 h-3 bg-white/70 rounded-full mt-2"
              animate={{ y: [0, 12, 0] }}
              transition={{ duration: 2, repeat: Infinity }}
            />
          </div>
        </motion.div>
        
        {/* Large Background Glow */}
        <motion.div
          className="absolute -top-1/2 -left-1/4 w-1/2 h-1/2 bg-purple-500/10 rounded-full blur-3xl"
          variants={pulseAnimation}
          animate="animate"
        />
        <motion.div
          className="absolute -bottom-1/4 -right-1/4 w-1/2 h-1/2 bg-pink-500/10 rounded-full blur-3xl"
          variants={pulseAnimation}
          animate="animate"
          style={{ animationDelay: '2s' }}
        />
      </section>

      {/* Services Section */}
      <motion.section
        className="py-20 overflow-hidden relative bg-background"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
        variants={container}
      >
        <motion.div
          className="absolute top-0 left-1/2 -translate-x-1/2 w-[600px] h-[600px] bg-purple-500/10 blur-3xl rounded-full"
          animate={{
            opacity: [0.2, 0.4, 0.2],
            scale: [1, 1.1, 1],
            rotate: [0, 180, 360]
          }}
          transition={{ repeat: Infinity, duration: 12, ease: "easeInOut" }}
        />
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
          <motion.div
            className="text-center space-y-4 mb-16"
            variants={item}
          >
            <motion.h2
              className="text-4xl font-bold text-foreground"
              variants={item}
            >
              Our Services
            </motion.h2>
            <motion.p
              className="text-xl text-muted-foreground max-w-3xl mx-auto"
              variants={item}
            >
              Explore our comprehensive services tailored to your needs
            </motion.p>
          </motion.div>
          
          <motion.div
            className="flex flex-col md:flex-row justify-between items-center gap-4 mb-6"
            variants={item}
          >
            <div className="w-full md:w-1/2">
              <Input
                placeholder="Search services, e.g. 'mobile app', 'cloud'"
                value={query}
                onChange={(e) => setQuery(e.target.value)}
                aria-label="Search services"
                className="border-[#64748B] focus:border-purple-600"
              />
            </div>
            <div className="flex items-center gap-2">
              {categories.map((c) => (
                <motion.button
                  key={c.id}
                  onClick={() => setActiveCategory(c.id)}
                  className={`px-3 py-1 rounded-md text-sm font-medium transition ${
                    activeCategory === c.id ? "bg-purple-600 text-white" : "bg-gray-100 text-purple-600 hover:bg-purple-100"
                  }`}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  {c.label}
                </motion.button>
              ))}
            </div>
          </motion.div>
          
          <motion.div
            className="grid md:grid-cols-2 lg:grid-cols-3 gap-6"
            variants={container}
          >
            {filtered.map((s, index) => (
              <motion.div
                key={s.id}
                variants={item}
                whileHover={{
                  y: -10,
                  transition: { type: "spring", stiffness: 300 }
                }}
              >
                <Card className="border-0 shadow-lg hover:shadow-xl transition-all text-center group bg-gradient-to-b from-white to-purple-50">
                  <CardContent className="p-6 space-y-4">
                    <motion.div
                      className="bg-purple-100 w-16 h-16 rounded-xl flex items-center justify-center mx-auto group-hover:bg-purple-200 transition-colors"
                      whileHover={{ rotate: 10, scale: 1.1 }}
                      transition={{ type: "spring", stiffness: 200 }}
                    >
                      <s.icon className="h-8 w-8 text-purple-600" />
                    </motion.div>
                    <div className="space-y-2">
                      <h3 className="text-xl font-bold text-foreground">{s.title}</h3>
                      <p className="text-sm text-muted-foreground">{s.description}</p>
                    </div>
                    <div className="flex flex-wrap gap-2 justify-center">
                      {s.highlights.map((h, i) => (
                        <Badge key={i} variant="secondary" className="bg-purple-100 text-purple-600">{h}</Badge>
                      ))}
                    </div>
                    
                    {/* Service Details Toggle */}
                    {s.details && s.details.length > 0 && (
                      <div className="space-y-4">
                        <Button 
                          onClick={() => toggleServiceDetails(s.id)}
                          variant="outline" 
                          className="w-full text-purple-600 border-purple-600 hover:bg-purple-600 hover:text-white"
                        >
                          {expandedService === s.id ? 'Hide Details' : 'View Details'}
                        </Button>
                        
                        {expandedService === s.id && (
                          <motion.div 
                            initial={{ opacity: 0, height: 0 }}
                            animate={{ opacity: 1, height: 'auto' }}
                            exit={{ opacity: 0, height: 0 }}
                            transition={{ duration: 0.3 }}
                            className="text-left space-y-3 border-t pt-4"
                          >
                            {s.details.map((detail, idx) => (
                              <div key={idx} className="space-y-2">
                                <h4 className="font-semibold text-foreground text-sm">{detail.title}</h4>
                                <p className="text-xs text-muted-foreground">{detail.description}</p>
                              </div>
                            ))}
                          </motion.div>
                        )}
                      </div>
                    )}
                    
                    {/* <Link to="/contact"> */}
                      {/* <Button className="w-full bg-purple-600 hover:bg-purple-700 text-white group-hover:scale-105 transition-transform">
                        Get Started
                      </Button> */}
                    {/* </Link> */}
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </motion.section>

      {/* Products Section */}
      <motion.section
        className="py-20 bg-gray-50 overflow-hidden relative"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
        variants={container}
      >
        <motion.div
          className="absolute top-0 left-1/2 -translate-x-1/2 w-[600px] h-[600px] bg-purple-500/10 blur-3xl rounded-full"
          animate={{
            opacity: [0.2, 0.3, 0.2],
            scale: [1, 1.05, 1],
          }}
          transition={{ repeat: Infinity, duration: 10, ease: "easeInOut" }}
        />
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
          <motion.div
            className="text-center space-y-4 mb-16"
            variants={item}
          >
            <h2 className="text-4xl font-bold text-foreground">Products We Build</h2>
            <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
              Discover the innovative products we deliver for startups and enterprises
            </p>
          </motion.div>
          <motion.div
            className="grid md:grid-cols-2 lg:grid-cols-4 gap-6"
            variants={container}
          >
            {products.map((p, index) => (
              <motion.div
                key={p.id}
                variants={item}
                whileHover={{
                  y: -10,
                  transition: { type: "spring", stiffness: 300 }
                }}
              >
                <Card className="border-0 shadow-lg hover:shadow-xl transition-all duration-300">
                  <CardContent className="p-6 space-y-4">
                    <div className="h-36 bg-gradient-to-br from-white to-purple-50 flex items-center justify-center">
                      <img src={p.image} alt={p.name} className="h-20 w-auto" />
                    </div>
                    <div className="space-y-2">
                      <h3 className="text-lg font-bold text-foreground">{p.name}</h3>
                      <p className="text-sm text-muted-foreground">{p.description}</p>
                    </div>
                    <div className="flex flex-wrap gap-2">
                      {p.tech.map((t) => (
                        <Badge key={t} variant="secondary" className="bg-purple-100 text-purple-600">{t}</Badge>
                      ))}
                    </div>
                    <Link to="/projects">
                      <Button className="w-full bg-purple-600 hover:bg-purple-700 text-white">Explore</Button>
                    </Link>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </motion.section>

      {/* Contact Section */}
      <motion.section
        className="py-20 bg-gradient-to-br from-gray-50 to-purple-50"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.1 }}
        variants={container}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            className="grid lg:grid-cols-2 gap-12"
            variants={container}
          >
            {/* Contact Information */}
            <motion.div className="space-y-8" variants={fadeUp} custom={0}>
              <div className="space-y-4">
                <Badge className="bg-purple-100 text-purple-700 px-4 py-1 text-sm">
                  Get In Touch
                </Badge>
                <h2 className="text-4xl font-bold text-foreground">
                  Let's Discuss Your Project
                </h2>
                <p className="text-xl text-muted-foreground">
                  Fill out the form and our experts will contact you within 24 hours to discuss your requirements and provide a customized solution.
                </p>
              </div>

              <div className="space-y-6">
                <div className="flex items-start space-x-4">
                  <div className="bg-purple-100 p-3 rounded-lg">
                    <Phone className="h-6 w-6 text-purple-600" />
                  </div>
                  <div>
                    <h4 className="font-semibold text-foreground">Call Us</h4>
                    <p className="text-muted-foreground">+91 9876543210</p>
                    <p className="text-sm text-muted-foreground">Mon-Fri from 9am to 6pm</p>
                  </div>
                </div>

                <div className="flex items-start space-x-4">
                  <div className="bg-purple-100 p-3 rounded-lg">
                    <Mail className="h-6 w-6 text-purple-600" />
                  </div>
                  <div>
                    <h4 className="font-semibold text-foreground">Email Us</h4>
                    <p className="text-muted-foreground">info@ssinfotech.com</p>
                    <p className="text-sm text-muted-foreground">We'll respond within 24 hours</p>
                  </div>
                </div>

                <div className="flex items-start space-x-4">
                  <div className="bg-purple-100 p-3 rounded-lg">
                    <MapPin className="h-6 w-6 text-purple-600" />
                  </div>
                  <div>
                    <h4 className="font-semibold text-foreground">Visit Us</h4>
                    <p className="text-muted-foreground">123 Tech Park, Innovation Road</p>
                    <p className="text-sm text-muted-foreground">Mumbai, Maharashtra - 400001</p>
                  </div>
                </div>

                <div className="flex items-start space-x-4">
                  <div className="bg-purple-100 p-3 rounded-lg">
                    <Clock className="h-6 w-6 text-purple-600" />
                  </div>
                  <div>
                    <h4 className="font-semibold text-foreground">Response Time</h4>
                    <p className="text-muted-foreground">Within 24 Hours</p>
                    <p className="text-sm text-muted-foreground">Quick turnaround for all inquiries</p>
                  </div>
                </div>
              </div>

              <div className="bg-white p-6 rounded-lg border border-purple-100 shadow-sm">
                <h4 className="font-semibold text-foreground mb-3">Why Choose Us?</h4>
                <ul className="space-y-2 text-sm text-muted-foreground">
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Free initial consultation</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Detailed project analysis</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Competitive pricing</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Post-delivery support</span>
                  </li>
                </ul>
              </div>
            </motion.div>

            {/* Inquiry Form */}
            <motion.div variants={fadeUp} custom={0.3}>
              <Card className="border-0 shadow-xl hover:shadow-2xl transition-all duration-300 bg-white">
                <CardHeader className="bg-gradient-to-r from-purple-600 to-purple-700 text-white rounded-t-lg">
                  <CardTitle className="flex items-center space-x-2 text-white">
                    <Send className="h-5 w-5" />
                    <span>Project Inquiry Form</span>
                  </CardTitle>
                  <CardDescription className="text-purple-100">
                    Tell us about your project requirements and we'll get back to you with a customized solution.
                  </CardDescription>
                </CardHeader>
                <CardContent className="p-6 space-y-6">
                  <form className="space-y-6" onSubmit={handleSubmit}>
                    <div className="grid md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="name" className="text-foreground flex items-center">
                          Full Name *
                        </Label>
                        <Input 
                          id="name" 
                          name="name" 
                          value={form.name} 
                          onChange={handleFormChange} 
                          className="border-gray-300 focus:border-purple-600 focus:ring-purple-600" 
                          placeholder="Enter your full name"
                          required 
                        />
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="email" className="text-foreground flex items-center">
                          Email Address *
                        </Label>
                        <Input 
                          id="email" 
                          name="email" 
                          type="email" 
                          value={form.email} 
                          onChange={handleFormChange} 
                          className="border-gray-300 focus:border-purple-600 focus:ring-purple-600" 
                          placeholder="your.email@example.com"
                          required 
                        />
                      </div>
                    </div>

                    <div className="grid md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="phone" className="text-foreground flex items-center">
                          Phone Number *
                        </Label>
                        <Input 
                          id="phone" 
                          name="phone" 
                          type="tel" 
                          value={form.phone} 
                          onChange={handleFormChange} 
                          className="border-gray-300 focus:border-purple-600 focus:ring-purple-600" 
                          placeholder="+91 9876543210"
                          required 
                        />
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="company" className="text-foreground">
                          Company/Organization
                        </Label>
                        <Input 
                          id="company" 
                          name="company" 
                          value={form.company} 
                          onChange={handleFormChange} 
                          className="border-gray-300 focus:border-purple-600 focus:ring-purple-600" 
                          placeholder="Your company name"
                        />
                      </div>
                    </div>

                    <div className="space-y-2">
                      <Label htmlFor="service" className="text-foreground flex items-center">
                        Interested Service *
                      </Label>
                      <Select onValueChange={(value) => handleSelect("service", value)} value={form.service}>
                        <SelectTrigger className="border-gray-300 focus:border-purple-600 focus:ring-purple-600 bg-white">
                          <SelectValue placeholder="Select a service you're interested in" />
                        </SelectTrigger>
                        <SelectContent>
                          {services.map((s) => (
                            <SelectItem key={s.id} value={s.title} className="text-foreground bg-white">
                              {s.title}
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>

                    <div className="grid md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="budget" className="text-foreground">
                          Estimated Budget
                        </Label>
                        <Select onValueChange={(value) => handleSelect("budget", value)} value={form.budget}>
                          <SelectTrigger className="border-gray-300 focus:border-purple-600 focus:ring-purple-600 bg-white">
                            <SelectValue placeholder="Select budget range" />
                          </SelectTrigger>
                          <SelectContent>
                            {budgetRanges.map((range) => (
                              <SelectItem key={range.value} value={range.value} className="text-foreground bg-white">
                                {range.label}
                              </SelectItem>
                            ))}
                          </SelectContent>
                        </Select>
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="timeline" className="text-foreground">
                          Project Timeline
                        </Label>
                        <Select onValueChange={(value) => handleSelect("timeline", value)} value={form.timeline}>
                          <SelectTrigger className="border-gray-300 focus:border-purple-600 focus:ring-purple-600 bg-white">
                            <SelectValue placeholder="Select timeline" />
                          </SelectTrigger>
                          <SelectContent>
                            {timelineOptions.map((option) => (
                              <SelectItem key={option.value} value={option.value} className="text-foreground bg-white">
                                {option.label}
                              </SelectItem>
                            ))}
                          </SelectContent>
                        </Select>
                      </div>
                    </div>

                    <div className="space-y-2">
                      <Label htmlFor="message" className="text-foreground">
                        Project Requirements & Details
                      </Label>
                      <Textarea 
                        id="message" 
                        name="message" 
                        rows={5} 
                        value={form.message} 
                        onChange={handleFormChange} 
                        className="border-gray-300 focus:border-purple-600 focus:ring-purple-600 resize-none" 
                        placeholder="Please describe your project requirements, goals, and any specific features you need..."
                      />
                    </div>

                    <Button 
                      type="submit" 
                      disabled={!canSubmit || submitting} 
                      className="w-full bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white py-3 text-lg font-semibold group transition-all duration-300"
                    >
                      {submitting ? (
                        <div className="flex items-center space-x-2">
                          <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin" />
                          <span>Processing Your Request...</span>
                        </div>
                      ) : (
                        <div className="flex items-center space-x-2">
                          <Send className="h-5 w-5 group-hover:translate-x-1 transition-transform" />
                          <span>Submit Inquiry</span>
                          <ArrowRight className="h-4 w-4 group-hover:translate-x-1 transition-transform" />
                        </div>
                      )}
                    </Button>

                    <p className="text-xs text-muted-foreground text-center">
                      By submitting this form, you agree to our privacy policy and consent to being contacted by our team.
                    </p>
                  </form>
                </CardContent>
              </Card>
            </motion.div>
          </motion.div>
        </div>
      </motion.section>
    </div>
  );
}